@namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");

.controlBar {
	height: 28px;
	background-color: rgba(35,31,32,0.74);
}
.playButton {
	background: url("chrome://global/skin/media/pauseButton.png") no-repeat center;
	/* Remove the native button appearance and styling */
	-moz-appearance: none;
	margin: 0px;
	padding: 0px;
	min-height: 28px;
	min-width: 28px;
	border: none;
	margin-right: -22px; /* 1/2 of scrubber thumb width, for overhang. */
	position: relative; /* Trick to work around negative margin interfering with clicking on the button. */
}
.playButton[paused="true"] {
	background: url("chrome://global/skin/media/playButton.png") no-repeat center;
}
.muteButton {
	background: url("chrome://global/skin/media/muteButton.png") no-repeat center;
	/* Remove the native button appearance and styling */
	-moz-appearance: none;
	margin: 0px;
	padding: 0px;
	min-height: 28px;
	min-width: 33px;
	border: none;
}
.muteButton[muted] {
	background: url("chrome://global/skin/media/unmuteButton.png") no-repeat center;
}
.muteButton[noAudio] {
	background: url("chrome://global/skin/media/noAudio.png") no-repeat center;
}
.muteButton[noAudio] + .volumeStack {
	display: none;
}
.fullscreenButton,
.fullscreenButton[fullscreened] {
	-moz-appearance: none;
	background: url("chrome://global/skin/media/fullscreenButton.png") no-repeat center;
	min-height: 28px;
	min-width: 28px;
	padding: 0px;
	margin: 0px;
	border: none;
}
.volumeControl {
	width: 32px;
	opacity: 0;
}
.volumeBackground,
.volumeForeground {
	background-repeat: no-repeat;
	background-position: center;
	width: 32px;
}
.volumeBackground {
	background-image: url(chrome://global/skin/media/volume-empty.png);
}
.volumeForeground {
	background-image: url(chrome://global/skin/media/volume-full.png);
	background-clip: content-box;
}
.controlBar[audio-only] > .volumeStack {
	/* This value is duplicated in the videocontrols.xml adjustControlSize function. */
	-moz-margin-end: 8px;
}
.volumeControl .scale-thumb {
	min-width: 0;
	opacity: 0;
}
.durationBox {
	-moz-box-pack: center;
}
.durationLabel {
	margin-left: -22px;	/* 1/2 of scrubber thumb width, for overhang. */
	padding-left: 8px;	/* don't bump into the scrubber bar */
	padding-top: 0px;	/* center vertically with scrubber bar */
	color: rgba(255,255,255,0.75);
	font-size: 11px;
	font-family: Meiryo, Arial, sans-serif;
}
.positionLabel {
	display: none;
}
.backgroundBar {
	/* margin top/bottom: make bar 8px tall (control height = 28, minus 2 * 10 margin) */
	/* margin left/right: 1/2 of scrubber thumb width, for overhang. */
	margin: 10px 22px 10px 22px;
	background-color: rgba(255,255,255,0.5);
	border-radius: 4px 4px;
}
.bufferBar,
.progressBar {
	/* margin top/bottom: make bar 8px tall (control height = 28, minus 2 * 10 margin) */
	/* margin left/right: 1/2 of scrubber thumb width, for overhang. */
	margin: 10px 22px 10px 22px;
	-moz-appearance: none;
	border: none;
	background-color: transparent;
	min-width: 0px;
	min-height: 0px;
}

/* .progress-bar is an element inside the <progressmeter> implementation. */

.bufferBar .progress-bar {
	/*
	 * Note that this is drawn on top of the .backgroundBar. So although this
	 * has the same background-color specified, the semitransparent
	 * compositing gives it a different visual appearance.
	 */
	background-color: rgba(255,255,255,0.5);
	border-radius: 2px;
	-moz-appearance: none;
}
.progressBar .progress-bar {
	background-color: white;
	border-radius: 2px;
	-moz-appearance: none;
}

/* .scale-slider is an element inside the <scale> implementation. */

.scrubber .scale-slider, .volumeControl .scale-slider {
	/* Hide the default horizontal bar. */
	-moz-appearance: none;
	background: none;
	margin: 0;
}
.scrubber .scale-slider {
	/* abs(margin-top) + margin-bottom + bar height == timeThumb height */
	margin-top: -10px;
	margin-bottom: 10px;
}

/* .scale-thumb is an element inside the <scale> implementation. */

.scrubber .scale-thumb,
.volumeControl .scale-thumb {
	/* Override the default thumb appearance with a custom image. */
	-moz-appearance: none;
	background: transparent;
	border: none;
}
.timeThumb {
	background: url("chrome://global/skin/media/scrubberThumb.png") no-repeat center;
	min-width: 45px;
	min-height: 28px;
	-moz-box-pack: center;
}
.timeThumb[showhours="true"] {
	background: url("chrome://global/skin/media/scrubberThumbWide.png") no-repeat center;
}
.timeLabel {
	color: rgba(255,255,255,0.75);
	font-size: 10px;
	font-family:  Meiryo, Arial, sans-serif;
	text-shadow: rgba(0,0,0, 0.3) 0 1px;
	padding-top: 1px;
}
.statusOverlay {
	background-color: rgba(0,0,0,0.55);
}
.statusIcon {
	margin-bottom: 28px; /* same height as .controlBar, to keep icon centered above it */
	width: 36px;
	height: 36px;
}
.statusIcon[type="throbber"] {
	background: url("chrome://global/skin/media/Throbber-small.gif") no-repeat center;
}
.statusIcon[type="error"] {
	background: url("chrome://global/skin/icons/Error.png") no-repeat center;
}

/* Overlay Play button */

.clickToPlay {
	-moz-box-pack: center;
	-moz-box-align: center;
	width: 64px;
	height: 64px;
	background-image: url("chrome://global/skin/media/clicktoplay-bgtexture.png"), url("chrome://global/skin/media/videoClickToPlayButton.svg");
	background-repeat: repeat, no-repeat;
	background-position: center, center;
	background-size: auto, 64px 64px;
	opacity: 0.7;
}
.clickToPlay:hover {
	opacity: 1;
}

/* Statistics formatting */

html|*.statsDiv {
	position: relative;
}
html|td {
	height: 1em;
	max-height: 1em;
	padding: 0 2px;
}
html|table {
	font-family: Helvetica, Arial, sans-serif;
	font-size: 11px;
	color: white;
	text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000, 1px 1px 0 #000;
	min-width: 100%;
	background: rgba(68,68,68,.7);
	table-layout: fixed;
	border-collapse: collapse;
	position: absolute;
}
